[{"C:\\node\\shopping-react\\shopping-user-react\\src\\index.js":"1","C:\\node\\shopping-react\\shopping-user-react\\src\\App.js":"2","C:\\node\\shopping-react\\shopping-user-react\\src\\component\\navBar.jsx":"3","C:\\node\\shopping-react\\shopping-user-react\\src\\pages\\homePage.jsx":"4","C:\\node\\shopping-react\\shopping-user-react\\src\\pages\\homebody.jsx":"5","C:\\node\\shopping-react\\shopping-user-react\\src\\pages\\product.jsx":"6"},{"size":168,"mtime":1611406689811,"results":"7","hashOfConfig":"8"},{"size":635,"mtime":1613479052965,"results":"9","hashOfConfig":"8"},{"size":4250,"mtime":1613482638624,"results":"10","hashOfConfig":"8"},{"size":4392,"mtime":1613481788733,"results":"11","hashOfConfig":"8"},{"size":3252,"mtime":1613402702423,"results":"12","hashOfConfig":"8"},{"size":723,"mtime":1613480992098,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ktkbas",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\node\\shopping-react\\shopping-user-react\\src\\index.js",[],["28","29"],"C:\\node\\shopping-react\\shopping-user-react\\src\\App.js",["30"],"C:\\node\\shopping-react\\shopping-user-react\\src\\component\\navBar.jsx",["31","32","33","34","35"],"C:\\node\\shopping-react\\shopping-user-react\\src\\pages\\homePage.jsx",["36","37","38","39","40"],"C:\\node\\shopping-react\\shopping-user-react\\src\\pages\\homebody.jsx",["41","42","43","44","45"],"import React from \"react\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport image from \"../component/images/img.jpg\";\r\nconst Homebody = () => {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 5,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 4,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Carousel\r\n        swipeable={false}\r\n        draggable={false}\r\n        showDots={true}\r\n        responsive={responsive}\r\n        ssr={true} // means to render carousel on server-side.\r\n        infinite={true}\r\n        autoPlay={true}\r\n        autoPlaySpeed={2000}\r\n        keyBoardControl={true}\r\n        customTransition=\"all .5\"\r\n        transitionDuration={800}\r\n        containerClass=\"carousel-container\"\r\n        dotListClass=\"custom-dot-list-style\"\r\n      >\r\n        <div>\r\n          <div className=\"card\" style={{ width: \"14rem\" }}>\r\n            <img className=\"card-img-top\" src={image} alt=\"Card image cap\" />\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">asdfe bulk of the card's content.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <div className=\"card\" style={{ width: \"14rem\" }}>\r\n            <img className=\"card-img-top\" src={image} alt=\"Card image cap\" />\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">he bulk of the card's content.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <div className=\"card\" style={{ width: \"14rem\" }}>\r\n            <img className=\"card-img-top\" src={image} alt=\"Card image cap\" />\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the card's content.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <div className=\"card\" style={{ width: \"14rem\" }}>\r\n            <img className=\"card-img-top\" src={image} alt=\"Card image cap\" />\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the card's content.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          {\" \"}\r\n          <div className=\"card\" style={{ width: \"14rem\" }}>\r\n            <img className=\"card-img-top\" src={image} alt=\"Card image cap\" />\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">\r\n                Some quick example text to build on the card title and make up\r\n                the bulk of the card's content.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Carousel>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Homebody;\r\n","C:\\node\\shopping-react\\shopping-user-react\\src\\pages\\product.jsx",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":50,"nodeType":"53","messageId":"54","endLine":2,"endColumn":54},{"ruleId":"55","severity":1,"message":"56","line":19,"column":6,"nodeType":"57","endLine":19,"endColumn":8,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":40,"column":9,"nodeType":"61","endLine":40,"endColumn":31},{"ruleId":"59","severity":1,"message":"60","line":64,"column":9,"nodeType":"61","endLine":64,"endColumn":34},{"ruleId":"62","severity":1,"message":"63","line":68,"column":13,"nodeType":"64","endLine":68,"endColumn":71},{"ruleId":"59","severity":1,"message":"60","line":102,"column":9,"nodeType":"61","endLine":102,"endColumn":34},{"ruleId":"51","severity":1,"message":"65","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"66","line":20,"column":20,"nodeType":"53","messageId":"54","endLine":20,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":80,"column":19,"nodeType":"64","endLine":80,"endColumn":69},{"ruleId":"67","severity":1,"message":"68","line":81,"column":19,"nodeType":"64","endLine":81,"endColumn":46},{"ruleId":"69","severity":1,"message":"70","line":120,"column":15,"nodeType":"64","endLine":120,"endColumn":63},{"ruleId":"62","severity":1,"message":"63","line":44,"column":13,"nodeType":"64","endLine":44,"endColumn":78},{"ruleId":"62","severity":1,"message":"63","line":53,"column":13,"nodeType":"64","endLine":53,"endColumn":78},{"ruleId":"62","severity":1,"message":"63","line":62,"column":13,"nodeType":"64","endLine":62,"endColumn":78},{"ruleId":"62","severity":1,"message":"63","line":74,"column":13,"nodeType":"64","endLine":74,"endColumn":78},{"ruleId":"62","severity":1,"message":"63","line":86,"column":13,"nodeType":"64","endLine":86,"endColumn":78},{"ruleId":"51","severity":1,"message":"65","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.","ArrayExpression",["73"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'setProducts' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [handleScroll]",{"range":"76","text":"77"},[634,636],"[handleScroll]"]